name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
          lfs: true

      - name: LFS ensure files present
        run: |
          git lfs install
          git lfs fetch --all
          git lfs checkout

      - name: Verify Gradle Wrapper files
        run: |
          test -f gradlew || { echo "::error::gradlew is missing"; exit 1; }
          test -f gradle/wrapper/gradle-wrapper.properties || { echo "::error::gradle-wrapper.properties is missing"; exit 1; }
          test -f gradle/wrapper/gradle-wrapper.jar || { echo "::error::gradle-wrapper.jar is missing. Commit it to the repo (not via LFS)."; exit 1; }

      - name: Set up Java 17
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3

      - name: Ensure gradlew is executable
        run: chmod +x gradlew

      - name: Run check-all
        run: ./gradlew check-all --no-daemon

      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          echo "VERSION=${VERSION}" >> "$GITHUB_ENV"

      - name: Set version variables
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION_NAME="${VERSION}"
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_NAME"
          : "${MAJOR:=0}" ; : "${MINOR:=0}" ; : "${PATCH:=0}"
          VERSION_CODE=$(printf '%d%02d%02d' "$MAJOR" "$MINOR" "$PATCH")
          echo "VERSION_NAME=$VERSION_NAME" >> "$GITHUB_ENV"
          echo "VERSION_CODE=$VERSION_CODE" >> "$GITHUB_ENV"

      - name: Update app version in build.gradle.kts
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          sed -i "s/versionName = \".*\"/versionName = \"${VERSION_NAME}\"/g" app/build.gradle.kts
          sed -i "s/versionCode = [0-9][0-9]*/versionCode = ${VERSION_CODE}/g" app/build.gradle.kts

      - name: Build APK (tag only)
        if: startsWith(github.ref, 'refs/tags/v')
        run: ./gradlew assembleRelease --no-daemon

      - name: Upload APK
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: jabook-release-${{ env.VERSION_NAME }}.apk
          path: app/build/outputs/apk/release/app-release.apk